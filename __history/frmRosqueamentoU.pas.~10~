unit frmRosqueamentoU;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Controls.Presentation, FMX.Layouts, FMX.Edit;

type
  TfrmRosqueamento = class(TForm)
    cabecalho: TToolBar;
    lbTitulo: TLabel;
    btnVoltar: TButton;
    lbSubTitulo: TLabel;
    lCorpo: TLayout;
    lCabecalhoCorpo: TLayout;
    rbMetrica: TRadioButton;
    rbPolegadas: TRadioButton;
    lDadosIniciais: TLayout;
    Label4: TLabel;
    edtValor: TEdit;
    btnCalcular: TButton;
    Label1: TLabel;
    edtQtdPassadas: TEdit;
    lSaidaDeDados: TLayout;
    lbPasse: TLabel;
    lbAlturaDoFilete: TLabel;
    lbDiametroFinal: TLabel;
    lbProfundidadePasse: TLabel;
    lbResultado: TLabel;
    btnAtualizar: TButton;
    cbRoscaInterna: TCheckBox;
    procedure btnVoltarClick(Sender: TObject);
    procedure btnCalcularClick(Sender: TObject);
    procedure rbMetricaClick(Sender: TObject);
    procedure rbPolegadasClick(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmRosqueamento: TfrmRosqueamento;

implementation

{$R *.fmx}


procedure TfrmRosqueamento.btnAtualizarClick(Sender: TObject);
begin
  edtValor.Text := '';
  edtQtdPassadas.Text	 := '';
  lbPasse.Text := 'Passo (F):';
  lbDiametroFinal.Text  := 'Diâmetro Final (X): ';
  lbProfundidadePasse.Text  := 'Profundidade do Passe (Q): ';
  lbAlturaDoFilete.Text  := 'Altura do Filete (P): ';
  lbResultado.Text  := 'G76 X0 Z0 P0 Q0 F0';
end;

procedure TfrmRosqueamento.btnCalcularClick(Sender: TObject);
var
passe : double;
diametroinicial : double;
diametrofinal : double;
profupasse : double;
qtdpassadas: double;
valorRosca : string;
passeInicial: double;

polegadas: string;
fiosRosca: double;
alturaFilete: double;
begin

//Tratamento de erros
edtValor.Text := StringReplace(edtValor.Text, '.', ',', [rfReplaceAll, rfIgnoreCase]);

if (edtvalor.text = '') or (edtqtdpassadas.Text = '') then
begin
  showmessage('Preencha todos os campos antes de realizar esta ação');
  exit;
end;


//Rosca do tipo polegada:
if rbPolegadas.Ischecked = true then
begin
if (Pos('"',edtValor.Text) = 0) OR (Pos('-',edtValor.Text) = 0) then
  begin
    showmessage('Por favor, insira o valor no formato polegada, exemplo: "1/2"-12"');
    exit;
  end;

valorRosca := edtValor.Text;

//Polegadas
polegadas := (Copy(valorRosca,0,Pos('"',valorRosca) - 1));
if (Pos('/',edtValor.Text) <> 0) then
begin
  polegadas := FloatToStr(StrToFloat((Copy(polegadas,0,Pos('/',polegadas)-1))) / StrToFloat((Copy(polegadas,Pos('/',polegadas)+1, Length(polegadas)))));
end;

  //Converter polegadas para milimetros
  polegadas := FloatToStr(strToFloat(polegadas) * 25.4);

  //Fios da rosca
  fiosRosca := StrToFloat(Copy(valorRosca,Pos('-',valorRosca) + 1));
  passe := strToFloat(FormatFloat('0.###',(25.4 / fiosRosca)));
  alturaFilete := (0.866 * passe);
  if cbRoscaInterna.isChecked = true then
  begin
     diametrofinal := StrToFloat(polegadas) + (passe * 2);
  end
    else
  begin
      diametrofinal := StrToFloat(polegadas) - (passe * 2);
  end;


  profupasse := alturaFilete/(sqrt(StrToFloat(edtqtdpassadas.Text)));

  lbPasse.Text := 'Passo (F): '+FormatFloat('0.###',(25.4 / fiosRosca));
  lbDiametroFinal.Text  := 'Diâmetro Final (X): '+FormatFloat('0.###',(diametrofinal));
  lbProfundidadePasse.Text  := 'Profundidade do Passe (Q) '+FormatFloat('0.###',(profupasse));
  lbAlturaDoFilete.Text  := 'Altura do Filete (P) '+FormatFloat('0.###',(alturaFilete));
  lbResultado.Text  := 'G76 X'+FormatFloat('0.##',(diametrofinal))+' Z0 P'+FormatFloat('0.##',(passe*1000))+' Q'+FormatFloat('0',(profupasse*1000))+' F'+FormatFloat('0.##',(passe));
  lbresultado.Text  := StringReplace(lbResultado.Text	, ',', '.', [rfReplaceAll, rfIgnoreCase]);
end;








//Rosca do tipo Métrica:
if rbMetrica.IsChecked = true	then
begin
  if (Pos('X',edtValor.Text) = 0) OR (Pos('M',edtValor.Text) = 0) then
  begin
    showmessage('Por favor, insira o valor no formato métrico, exemplo: "M25X2"');
    exit;
  end;

  //CorrigirValores
  valorRosca := edtValor.Text;
  passeInicial := StrToFloat((Copy (valorRosca, Pos ('X', valorRosca) + 1, Length (valorRosca))));
  qtdpassadas := StrToFloat(edtQtdPassadas.Text);
  diametroInicial := StrToFloat(Copy(Copy(valorRosca, Pos ('M', valorRosca) + 1, Length (valorRosca)), 0, Pos('X', Copy(valorRosca, Pos ('M', valorRosca) + 1, Length (valorRosca)))-1));

  //Calcular passe
  passe := (0.65 * passeInicial);
  //Calcular diametro final
  if cbRoscaInterna.isChecked = true then
  begin
    diametrofinal := diametroinicial + (passe *2);
  end
    else
  begin
    diametrofinal := diametroinicial - (passe *2);
  end;

  //Calcular profundidade do passe
  profupasse := (passe/(sqrt(qtdpassadas)));
  profuPasse := StrToFloat(FormatFloat('0.###',profupasse));


  lbPasse.Text := 'Passo (F): '+FloatToStr(passeInicial);
  lbDiametroFinal.Text  := 'Diâmetro Final (X): '+FloatToStr(diametrofinal);
  lbProfundidadePasse.Text  := 'Profundidade do Passe (Q) '+FloatToStr(profupasse);
  lbAlturaDoFilete.Text  := 'Altura do Filete (P) '+FloatToStr(passe);
  lbResultado.Text  := 'G76 X'+FloatToStr(diametrofinal)+' Z0 P'+FloatToStr(passe*1000)+' Q'+FloatToStr(profupasse*1000)+' F'+FloatToStr(passeInicial);
  lbresultado.Text  := StringReplace(lbResultado.Text	, ',', '.', [rfReplaceAll, rfIgnoreCase]);

  if diametrofinal <= 0 then
  begin
    showmessage('Impossivel de fazer esta rosca!');
  end;
End;


end;






procedure TfrmRosqueamento.btnVoltarClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmRosqueamento.rbMetricaClick(Sender: TObject);
begin
  edtValor.Text := 'M25X2';
  edtQtdPassadas.Text	 := '';
end;

procedure TfrmRosqueamento.rbPolegadasClick(Sender: TObject);
begin
  edtValor.Text := '1/2"-12';
  edtQtdPassadas.Text	 := '';
end;

end.
